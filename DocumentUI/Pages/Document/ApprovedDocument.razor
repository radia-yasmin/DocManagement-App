@page "/Document/ApprovedDocument"
@inject HttpClient httpClient
@inject NavigationManager navigationManager


@if (documentList == null)
{
    <p>Loading...</p>
}
else
{
    <div class="row">
        <div class="col-lg-6">
            <h3>Approved Document</h3>
        </div>
    </div>
    <table class="table table-bordered table-hover">
        <thead>
            <tr>
                <th>Title</th>
                <th>Description</th>
                <th>Category</th>
                <th>User Name (Author)</th>
                <th>Document Name</th>
                <th>URL</th>
                <th>Status</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in documentList)
            {
                <tr>
                    <td>@item.Title</td>
                    <td>@item.Description</td>
                    <td>@item.Category.Name</td>
                    <td>@item.Users.FirstName @item.Users.LastName</td>
                    <td>@item.FileName</td>
                    <td><a href="https://localhost:44334/api/Document/download/@item.Id" target="_blank" class="card-link">Document</a></td>
                    <td>@(item.IsApproved ? "Active" : "Waiting for approvel")</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private List<Document> documentList;

    protected override async Task OnInitializedAsync()
    {
        // Replace the URL with your API endpoint
        var apiUrl = "https://localhost:44334/api/Document";

        // Make the HTTP request
        documentList = await httpClient.GetFromJsonAsync<List<Document>>(apiUrl);
    }

    public class Document
    {
        public int Id { get; set; }
        public string Title { get; set; }
        public string Description { get; set; }
        public string FileName { get; set; }
        public string FilePath { get; set; }
        public string UploadedBy { get; set; }
        public bool IsApproved { get; set; }
        public int CategoryId { get; set; }
        public int? SubCategoryId { get; set; }
        public string RejectionReason { get; set; }
        public Category Category { get; set; }
        public Users Users { get; set; }
    }

    public class Category
    {
        public int Id { get; set; }
        public string Name { get; set; }
    }

    public class Users
    {
        public string FirstName { get; set; }
        public string LastName { get; set; }
    }
}
